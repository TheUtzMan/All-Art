@page "/order/{id}"
@inject NavigationManager navManager
@using System.Net.Mail;
@using System.Net;

<center>
    <h1>Order</h1>
    <br>
    <div>
        <label>E-mail</label>
        <input type="email" @bind=@email/>
        <label>Address</label>
        <input type="text" @bind=@Address/>
        <label>First name</label>
        <input type="text" @bind=@firstName/>
        <label>Last name</label>
        <input type="text" @bind=@lastName/>
        @if(email.Contains('@') && email.Contains('.') && email.Length>=5)
        {   
            <button @onclick=@ConfirmOrder>Confirm</button>
        }

        @if(sent)
        {
            <p>@error</p>
        }
    </div>
</center>

@code {
    [Parameter]
    public string ID { get; set; } = string.Empty;

    private string email = string.Empty;
    private string firstName = string.Empty;
    private string lastName = string.Empty;
    private string Address = string.Empty;
    private bool sent = false;
    private string error = string.Empty;

    private void ConfirmOrder()
    {
        try
        {
            MailMessage mail = new();
            mail.From=(new MailAddress("noreply@allart.com"));
            mail.To.Add(new MailAddress(email));
            mail.Subject = "Order confirmation";
            mail.Body = $"Your order was successful! Product ID: {ID} Date:{DateTime.UtcNow}";

            var stmp = new SmtpClient();
            stmp.Port = 587;
            stmp.Host = "smtp.gmail.com";
            stmp.DeliveryMethod = SmtpDeliveryMethod.Network;
            stmp.EnableSsl = true;
            stmp.UseDefaultCredentials = false;
            stmp.Credentials = new NetworkCredential("aladinaladin644@gmail.com","krbpbpmbhdqqqatv");
            stmp.Send(mail);
            stmp.Dispose();
            error = "Your order information was sent!";
        }
        catch(Exception ex)
        {
            error = ex.Message;
        }
        finally { sent = true;}
    }
}